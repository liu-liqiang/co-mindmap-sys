version: '3.8'

services:
  # PostgreSQL 数据库
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mindmap_db}
      POSTGRES_USER: ${POSTGRES_USER:-mindmap_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - mindmap_network
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - mindmap_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Django 后端
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-mindmap_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-mindmap_db}
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
    depends_on:
      - db
      - redis
    expose:
      - "8000"
    volumes:
      - ./backend:/app  # 代码挂载，不打包到镜像中
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - mindmap_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/csrf/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Vue.js 前端
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    expose:
      - "80"
    volumes:
      - ./frontend:/app  # 代码挂载，不打包到镜像中
      - /app/node_modules  # 排除node_modules避免覆盖
    depends_on:
      - backend
    networks:
      - mindmap_network
    restart: unless-stopped

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - mindmap_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  mindmap_network:
    driver: bridge
